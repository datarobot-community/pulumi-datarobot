name: Release
on:
  workflow_dispatch:
  push:
    tags:
      - v*.*.*

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  NODE_AUTH_TOKEN:  ${{ secrets.NPM_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_REGISTRY_URL: https://registry.npmjs.org
  PUBLISH_NPM: true

  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  NUGET_FEED_URL: https://api.nuget.org/v3/index.json
  PUBLISH_NUGET: true

  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  PYPI_USERNAME: __token__
  PUBLISH_PYPI: true

  SIGNING_KEY: ${{ secrets.JAVA_SIGNING_KEY }}
  SIGNING_KEY_ID: ${{ secrets.JAVA_SIGNING_KEY_ID }}
  SIGNING_PASSWORD: ${{ secrets.JAVA_SIGNING_PASSWORD }}

  # --- Added for Slack notification & link rendering ---
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PACKAGE_NPM: "@datarobot/pulumi-datarobot"
  PACKAGE_PYPI: pulumi-datarobot
  PACKAGE_NUGET: DataRobotPulumi.Datarobot
  GO_MODULE: github.com/datarobot-community/pulumi-datarobot/sdk
  # -----------------------------------------------------

jobs:
  publish_binary:
    name: publish
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        goversion:
        - 1.22.x

    steps:
    - name: Checkout Repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags

    - name: Install Go
      uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
      with:
        go-version: ${{matrix.goversion}}

    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@6096f2a2bbfee498ced520b6922ac2c06e990ed2
      with:
        repo: pulumi/pulumictl

    - name: Set PreRelease Version
      run: echo "GORELEASER_CURRENT_TAG=v$(pulumictl get version --language generic)" >> $GITHUB_ENV

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        args: -p 3 release --clean
        version: latest

  publish_sdk:
    name: Publish SDKs
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: publish_binary
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Unshallow clone for tags
        run: git fetch --prune --unshallow --tags
      - name: Install Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.goversion }}
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@6096f2a2bbfee498ced520b6922ac2c06e990ed2 # v2.1.0
        with:
          repo: pulumi/pulumictl
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@b374ceb6168550de27c6eba92e01c1a774040e11 # tag=v2.0.0
      - name: Setup Node
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: ${{matrix.nodeversion}}
          registry-url: ${{env.NPM_REGISTRY_URL}}
      - name: Setup DotNet
        uses: actions/setup-dotnet@67a3573c9a986a3f9c594539f4ab511d57bb3ce9 # v4.3.1
        with:
          dotnet-version: ${{matrix.dotnetversion}}
      - name: Setup Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{matrix.pythonversion}}
      - name: Build SDK
        run: make build_${{ matrix.language }}
      - name: Check worktree clean
        run: |
          git update-index -q --refresh
          if ! git diff-files --quiet; then
              >&2 echo "error: working tree is not clean, aborting!"
              git status
              git diff
              exit 1
          fi
      - if: ${{ matrix.language == 'python' && env.PUBLISH_PYPI == 'true' }}
        name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@ab69e431e9c9f48a3310be0a56527c679f56e04d # v1.12.4
        with:
          user: ${{ env.PYPI_USERNAME }}
          password: ${{ env.PYPI_PASSWORD }}
          packages_dir: ${{github.workspace}}/sdk/python/bin/dist
      - if: ${{ matrix.language == 'nodejs' && env.PUBLISH_NPM == 'true' }}
        uses: JS-DevTools/npm-publish@19c28f1ef146469e409470805ea4279d47c3d35c # v3.1.1
        with:
          access: "public"
          token: ${{ env.NPM_TOKEN }}
          package: ${{github.workspace}}/sdk/nodejs/bin/package.json
          provenance: true
      - if: ${{ matrix.language == 'dotnet' && env.PUBLISH_NUGET == 'true' }}
        name: publish nuget package
        run: |
          dotnet nuget push ${{github.workspace}}/sdk/dotnet/bin/Debug/*.nupkg -s ${{ env.NUGET_FEED_URL }} -k ${{ env.NUGET_PUBLISH_KEY }}
          echo "done publishing packages"
    strategy:
      fail-fast: false
      matrix:
        dotnetversion:
          - 3.1.301
        goversion:
          - 1.21
        language:
          - nodejs
          - python
          - dotnet
          - go
        nodeversion:
          - 20
        pythonversion:
          - "3.10"

  notify_slack:
    name: Notify Slack
    runs-on: ubuntu-latest
    needs: publish_sdk
    if: success()
    steps:
      - name: Compose message
        if: ${{ env.SLACK_WEBHOOK_URL != '' }}
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/${GITHUB_REF_NAME}"
          MSG=":tada: Release ${GITHUB_REF_NAME} published for ${{ github.repository }}\n\
          GitHub Release: ${RELEASE_URL}\n\
          SDKs:\n\
          - Node.js (npm): https://www.npmjs.com/package/${{ env.PACKAGE_NPM }}/v/${VERSION}\n\
          - PyPI: https://pypi.org/project/${{ env.PACKAGE_PYPI }}/${VERSION}/\n\
          - NuGet: https://www.nuget.org/packages/${{ env.PACKAGE_NUGET }}/${VERSION}\n\
          - Go: go get ${{ env.GO_MODULE }}@v${VERSION}\n"
          echo "$MSG"
          echo "$MSG" | jq -R --slurp '{text: .}' > payload.json
      - name: Send to Slack
        if: ${{ env.SLACK_WEBHOOK_URL != '' }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data @payload.json "${{ env.SLACK_WEBHOOK_URL }}"
