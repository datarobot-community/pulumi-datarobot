name: yaml
runtime: yaml
description: A minimal Pulumi YAML program
config: {'pulumi:tags': {value: {'pulumi:template': yaml}}}
resources:
  datarobotUseCase:
    type: datarobot:UseCase
    properties:
      name: An example using pulumi YAML
      description: Description for the example use case

  datarobotDatasetFromFile:
    type: datarobot:DatasetFromFile
    properties:
      sourceFile: datarobot_english_documentation_docsassist.zip
      useCaseId: ${datarobotUseCase.id}

  datarobotPlayground:
    type: datarobot:Playground
    properties:
      name: ${datarobotUseCase.name}
      description: ${datarobotUseCase.description}
      useCaseId: ${datarobotUseCase.id}

  datarobotVectorDatabase:
    type: datarobot:VectorDatabase
    properties:
      name: ${datarobotUseCase.name}
      useCaseId: ${datarobotUseCase.id}
      datasetId: ${datarobotDatasetFromFile.id}
      chunkingParameters: {}

  datarobotLlmBlueprint:
    type: datarobot:LlmBlueprint
    properties:
      name: ${datarobotUseCase.name}
      description: ${datarobotUseCase.description}
      playgroundId: ${datarobotPlayground.id}
      vectorDatabaseId: ${datarobotVectorDatabase.id}
      llmId: azure-openai-gpt-3.5-turbo

  datarobotApiTokenCredential:
    type: datarobot:ApiTokenCredential
    properties:
      name: An example API token from pulumi YAML
      description: Description for the example API token
      apiToken: "[the API Key value here]"

  datarobotCustomModel:
    type: datarobot:CustomModel
    properties:
      name: ${datarobotUseCase.name}
      description: ${datarobotUseCase.description}
      sourceLlmBlueprintId: ${datarobotLlmBlueprint.id}
      runtimeParameters:
        - key: OPENAI_API_BASE
          type: string
          value: https://datarobot-genai-enablement.openai.azure.com/
        - key: OPENAI_API_KEY
          type: credential
          value: ${datarobotApiTokenCredential.id}

  datarobotRegisteredModel:
    type: datarobot:RegisteredModel
    properties:
      customModelVersionId: ${datarobotCustomModel.versionId}
      name: ${datarobotUseCase.name}
      description: ${datarobotUseCase.description}

  datarobotPredictionEnvironment:
    type: datarobot:PredictionEnvironment
    properties:
      name: An example prediction server
      description: Description for the example prediction server
      platform: aws

  datarobotDeployment:
    type: datarobot:Deployment
    properties:
      label: ${datarobotUseCase.name}
      predictionEnvironmentId: ${datarobotPredictionEnvironment.id}
      registeredModelVersionId: ${datarobotRegisteredModel.versionId}

  datarobotChatApplication:
    type: datarobot:ChatApplication
    properties:
      name: ${datarobotUseCase.name}
      deploymentId: ${datarobotDeployment.id}

outputs:
  exampleUseCaseId:
    value: ${datarobotUseCase.id}

  exampleDatasetId:
    value: ${datarobotDatasetFromFile.id}

  datarobotPlaygroundId:
    value: ${datarobotPlayground.id}

  datarobotVectorDatabaseId:
    value: ${datarobotVectorDatabase.id}

  datarobotLlmBlueprintId:
    value: ${datarobotLlmBlueprint.id}

  datarobotCustomModelId:
    value: ${datarobotCustomModel.id}

  datarobotCustomModelLatestVersionId:
    value: ${datarobotCustomModel.versionId}

  datarobotApiTokenCredentialId:
    value: ${datarobotApiTokenCredential.id}

  datarobotRegisteredModelId:
    value: ${datarobotRegisteredModel.id}

  datarobotRegisteredModelVersionId:
    value: ${datarobotRegisteredModel.versionId}

  datarobotPredictionEnvironmentId:
    value: ${datarobotPredictionEnvironment.id}

  datarobotDeploymentId:
    value: ${datarobotDeployment.id}

  datarobotChatApplicationId:
    value: ${datarobotChatApplication.id}

  datarobotChatApplicationUrl:
    value: ${datarobotChatApplication.applicationUrl}