// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DataRobotPulumi.Datarobot
{
    public static class GetExecutionEnvironment
    {
        /// <summary>
        /// Execution Environment
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datarobot = Pulumi.Datarobot;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Datarobot.GetExecutionEnvironment.Invoke(new()
        ///     {
        ///         Name = "DataRobot] Python 3.12",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetExecutionEnvironmentResult> InvokeAsync(GetExecutionEnvironmentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetExecutionEnvironmentResult>("datarobot:index/getExecutionEnvironment:getExecutionEnvironment", args ?? new GetExecutionEnvironmentArgs(), options.WithDefaults());

        /// <summary>
        /// Execution Environment
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Datarobot = Pulumi.Datarobot;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = Datarobot.GetExecutionEnvironment.Invoke(new()
        ///     {
        ///         Name = "DataRobot] Python 3.12",
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetExecutionEnvironmentResult> Invoke(GetExecutionEnvironmentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetExecutionEnvironmentResult>("datarobot:index/getExecutionEnvironment:getExecutionEnvironment", args ?? new GetExecutionEnvironmentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetExecutionEnvironmentArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Execution Environment.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetExecutionEnvironmentArgs()
        {
        }
        public static new GetExecutionEnvironmentArgs Empty => new GetExecutionEnvironmentArgs();
    }

    public sealed class GetExecutionEnvironmentInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Execution Environment.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetExecutionEnvironmentInvokeArgs()
        {
        }
        public static new GetExecutionEnvironmentInvokeArgs Empty => new GetExecutionEnvironmentInvokeArgs();
    }


    [OutputType]
    public sealed class GetExecutionEnvironmentResult
    {
        /// <summary>
        /// The description of the Execution Environment.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the Execution Environment.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Execution Environment.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The programming language of the Execution Environment.
        /// </summary>
        public readonly string ProgrammingLanguage;
        /// <summary>
        /// The ID of the Execution Environment Version.
        /// </summary>
        public readonly string VersionId;

        [OutputConstructor]
        private GetExecutionEnvironmentResult(
            string description,

            string id,

            string name,

            string programmingLanguage,

            string versionId)
        {
            Description = description;
            Id = id;
            Name = name;
            ProgrammingLanguage = programmingLanguage;
            VersionId = versionId;
        }
    }
}
