// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DataRobotPulumi.Datarobot
{
    /// <summary>
    /// Custom Metric From Job
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datarobot = DataRobotPulumi.Datarobot;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Datarobot.CustomMetricFromJob("example", new()
    ///     {
    ///         DeploymentId = datarobot_deployment.Example.Id,
    ///         CustomJobId = datarobot_custom_metric_job.Example.Id,
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["exampleId"] = example.Id,
    ///     };
    /// });
    /// ```
    /// </summary>
    [DatarobotResourceType("datarobot:index/customMetricFromJob:CustomMetricFromJob")]
    public partial class CustomMetricFromJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Baseline value for the metric.
        /// </summary>
        [Output("baselineValue")]
        public Output<double?> BaselineValue { get; private set; } = null!;

        /// <summary>
        /// Batch ID source when reading values from columnar dataset like a file.
        /// </summary>
        [Output("batch")]
        public Output<Outputs.CustomMetricFromJobBatch?> Batch { get; private set; } = null!;

        /// <summary>
        /// ID of the Custom Job.
        /// </summary>
        [Output("customJobId")]
        public Output<string> CustomJobId { get; private set; } = null!;

        /// <summary>
        /// ID of the Deployment.
        /// </summary>
        [Output("deploymentId")]
        public Output<string> DeploymentId { get; private set; } = null!;

        /// <summary>
        /// Description of the metric.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Name of the metric.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Additional parameters to be injected into the Metric Job at runtime.
        /// </summary>
        [Output("parameterOverrides")]
        public Output<ImmutableArray<Outputs.CustomMetricFromJobParameterOverride>> ParameterOverrides { get; private set; } = null!;

        /// <summary>
        /// Points to a weight column if users provide pre-aggregated metric values. Used with columnar datasets.
        /// </summary>
        [Output("sampleCount")]
        public Output<Outputs.CustomMetricFromJobSampleCount?> SampleCount { get; private set; } = null!;

        /// <summary>
        /// Defines at what intervals the metric job should run.
        /// </summary>
        [Output("schedule")]
        public Output<Outputs.CustomMetricFromJobSchedule?> Schedule { get; private set; } = null!;

        /// <summary>
        /// Timestamp spoofing when reading values from file, like dataset. By default, we replicate pd.to_datetime formatting behaviour.
        /// </summary>
        [Output("timestamp")]
        public Output<Outputs.CustomMetricFromJobTimestamp?> Timestamp { get; private set; } = null!;

        /// <summary>
        /// Value source when reading values from columnar dataset like a file.
        /// </summary>
        [Output("value")]
        public Output<Outputs.CustomMetricFromJobValue?> Value { get; private set; } = null!;


        /// <summary>
        /// Create a CustomMetricFromJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomMetricFromJob(string name, CustomMetricFromJobArgs args, CustomResourceOptions? options = null)
            : base("datarobot:index/customMetricFromJob:CustomMetricFromJob", name, args ?? new CustomMetricFromJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomMetricFromJob(string name, Input<string> id, CustomMetricFromJobState? state = null, CustomResourceOptions? options = null)
            : base("datarobot:index/customMetricFromJob:CustomMetricFromJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/datarobot-community/pulumi-datarobot",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomMetricFromJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomMetricFromJob Get(string name, Input<string> id, CustomMetricFromJobState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomMetricFromJob(name, id, state, options);
        }
    }

    public sealed class CustomMetricFromJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Baseline value for the metric.
        /// </summary>
        [Input("baselineValue")]
        public Input<double>? BaselineValue { get; set; }

        /// <summary>
        /// Batch ID source when reading values from columnar dataset like a file.
        /// </summary>
        [Input("batch")]
        public Input<Inputs.CustomMetricFromJobBatchArgs>? Batch { get; set; }

        /// <summary>
        /// ID of the Custom Job.
        /// </summary>
        [Input("customJobId", required: true)]
        public Input<string> CustomJobId { get; set; } = null!;

        /// <summary>
        /// ID of the Deployment.
        /// </summary>
        [Input("deploymentId", required: true)]
        public Input<string> DeploymentId { get; set; } = null!;

        /// <summary>
        /// Description of the metric.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the metric.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameterOverrides")]
        private InputList<Inputs.CustomMetricFromJobParameterOverrideArgs>? _parameterOverrides;

        /// <summary>
        /// Additional parameters to be injected into the Metric Job at runtime.
        /// </summary>
        public InputList<Inputs.CustomMetricFromJobParameterOverrideArgs> ParameterOverrides
        {
            get => _parameterOverrides ?? (_parameterOverrides = new InputList<Inputs.CustomMetricFromJobParameterOverrideArgs>());
            set => _parameterOverrides = value;
        }

        /// <summary>
        /// Points to a weight column if users provide pre-aggregated metric values. Used with columnar datasets.
        /// </summary>
        [Input("sampleCount")]
        public Input<Inputs.CustomMetricFromJobSampleCountArgs>? SampleCount { get; set; }

        /// <summary>
        /// Defines at what intervals the metric job should run.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.CustomMetricFromJobScheduleArgs>? Schedule { get; set; }

        /// <summary>
        /// Timestamp spoofing when reading values from file, like dataset. By default, we replicate pd.to_datetime formatting behaviour.
        /// </summary>
        [Input("timestamp")]
        public Input<Inputs.CustomMetricFromJobTimestampArgs>? Timestamp { get; set; }

        /// <summary>
        /// Value source when reading values from columnar dataset like a file.
        /// </summary>
        [Input("value")]
        public Input<Inputs.CustomMetricFromJobValueArgs>? Value { get; set; }

        public CustomMetricFromJobArgs()
        {
        }
        public static new CustomMetricFromJobArgs Empty => new CustomMetricFromJobArgs();
    }

    public sealed class CustomMetricFromJobState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Baseline value for the metric.
        /// </summary>
        [Input("baselineValue")]
        public Input<double>? BaselineValue { get; set; }

        /// <summary>
        /// Batch ID source when reading values from columnar dataset like a file.
        /// </summary>
        [Input("batch")]
        public Input<Inputs.CustomMetricFromJobBatchGetArgs>? Batch { get; set; }

        /// <summary>
        /// ID of the Custom Job.
        /// </summary>
        [Input("customJobId")]
        public Input<string>? CustomJobId { get; set; }

        /// <summary>
        /// ID of the Deployment.
        /// </summary>
        [Input("deploymentId")]
        public Input<string>? DeploymentId { get; set; }

        /// <summary>
        /// Description of the metric.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the metric.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("parameterOverrides")]
        private InputList<Inputs.CustomMetricFromJobParameterOverrideGetArgs>? _parameterOverrides;

        /// <summary>
        /// Additional parameters to be injected into the Metric Job at runtime.
        /// </summary>
        public InputList<Inputs.CustomMetricFromJobParameterOverrideGetArgs> ParameterOverrides
        {
            get => _parameterOverrides ?? (_parameterOverrides = new InputList<Inputs.CustomMetricFromJobParameterOverrideGetArgs>());
            set => _parameterOverrides = value;
        }

        /// <summary>
        /// Points to a weight column if users provide pre-aggregated metric values. Used with columnar datasets.
        /// </summary>
        [Input("sampleCount")]
        public Input<Inputs.CustomMetricFromJobSampleCountGetArgs>? SampleCount { get; set; }

        /// <summary>
        /// Defines at what intervals the metric job should run.
        /// </summary>
        [Input("schedule")]
        public Input<Inputs.CustomMetricFromJobScheduleGetArgs>? Schedule { get; set; }

        /// <summary>
        /// Timestamp spoofing when reading values from file, like dataset. By default, we replicate pd.to_datetime formatting behaviour.
        /// </summary>
        [Input("timestamp")]
        public Input<Inputs.CustomMetricFromJobTimestampGetArgs>? Timestamp { get; set; }

        /// <summary>
        /// Value source when reading values from columnar dataset like a file.
        /// </summary>
        [Input("value")]
        public Input<Inputs.CustomMetricFromJobValueGetArgs>? Value { get; set; }

        public CustomMetricFromJobState()
        {
        }
        public static new CustomMetricFromJobState Empty => new CustomMetricFromJobState();
    }
}
