// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DataRobotPulumi.Datarobot
{
    /// <summary>
    /// prediction environment
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datarobot = DataRobotPulumi.Datarobot;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Datarobot.PredictionEnvironment("example", new()
    ///     {
    ///         BatchJobsMaxConcurrent = 20,
    ///         BatchJobsPriority = "high",
    ///         CredentialId = "&lt;credential_id&gt;",
    ///         DatastoreId = "&lt;datastore_id&gt;",
    ///         Description = "Description for the example prediction environment",
    ///         ManagedBy = "selfManaged",
    ///         Platform = "datarobotServerless",
    ///         SupportedModelFormats = new[]
    ///         {
    ///             "datarobot",
    ///             "customModel",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DatarobotResourceType("datarobot:index/predictionEnvironment:PredictionEnvironment")]
    public partial class PredictionEnvironment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The maximum number of concurrent batch prediction jobs.
        /// </summary>
        [Output("batchJobsMaxConcurrent")]
        public Output<int?> BatchJobsMaxConcurrent { get; private set; } = null!;

        /// <summary>
        /// The importance of batch jobs.
        /// </summary>
        [Output("batchJobsPriority")]
        public Output<string?> BatchJobsPriority { get; private set; } = null!;

        /// <summary>
        /// The ID of the credential associated with the data connection. Only applicable for external prediction environments managed by DataRobot.
        /// </summary>
        [Output("credentialId")]
        public Output<string?> CredentialId { get; private set; } = null!;

        /// <summary>
        /// The ID of the data store connection configuration. Only applicable for external prediction environments managed by DataRobot.
        /// </summary>
        [Output("datastoreId")]
        public Output<string?> DatastoreId { get; private set; } = null!;

        /// <summary>
        /// The description of the Prediction Environment.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Determines if the prediction environment should be managed by the management agent, datarobot, or self-managed. Self-managed by default.
        /// </summary>
        [Output("managedBy")]
        public Output<string> ManagedBy { get; private set; } = null!;

        /// <summary>
        /// The name of the Prediction Environment.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The platform for the Prediction Environment.
        /// </summary>
        [Output("platform")]
        public Output<string> Platform { get; private set; } = null!;

        /// <summary>
        /// The list of supported model formats.
        /// </summary>
        [Output("supportedModelFormats")]
        public Output<ImmutableArray<string>> SupportedModelFormats { get; private set; } = null!;


        /// <summary>
        /// Create a PredictionEnvironment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PredictionEnvironment(string name, PredictionEnvironmentArgs args, CustomResourceOptions? options = null)
            : base("datarobot:index/predictionEnvironment:PredictionEnvironment", name, args ?? new PredictionEnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PredictionEnvironment(string name, Input<string> id, PredictionEnvironmentState? state = null, CustomResourceOptions? options = null)
            : base("datarobot:index/predictionEnvironment:PredictionEnvironment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/datarobot-community/pulumi-datarobot",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PredictionEnvironment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PredictionEnvironment Get(string name, Input<string> id, PredictionEnvironmentState? state = null, CustomResourceOptions? options = null)
        {
            return new PredictionEnvironment(name, id, state, options);
        }
    }

    public sealed class PredictionEnvironmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum number of concurrent batch prediction jobs.
        /// </summary>
        [Input("batchJobsMaxConcurrent")]
        public Input<int>? BatchJobsMaxConcurrent { get; set; }

        /// <summary>
        /// The importance of batch jobs.
        /// </summary>
        [Input("batchJobsPriority")]
        public Input<string>? BatchJobsPriority { get; set; }

        /// <summary>
        /// The ID of the credential associated with the data connection. Only applicable for external prediction environments managed by DataRobot.
        /// </summary>
        [Input("credentialId")]
        public Input<string>? CredentialId { get; set; }

        /// <summary>
        /// The ID of the data store connection configuration. Only applicable for external prediction environments managed by DataRobot.
        /// </summary>
        [Input("datastoreId")]
        public Input<string>? DatastoreId { get; set; }

        /// <summary>
        /// The description of the Prediction Environment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Determines if the prediction environment should be managed by the management agent, datarobot, or self-managed. Self-managed by default.
        /// </summary>
        [Input("managedBy")]
        public Input<string>? ManagedBy { get; set; }

        /// <summary>
        /// The name of the Prediction Environment.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The platform for the Prediction Environment.
        /// </summary>
        [Input("platform", required: true)]
        public Input<string> Platform { get; set; } = null!;

        [Input("supportedModelFormats")]
        private InputList<string>? _supportedModelFormats;

        /// <summary>
        /// The list of supported model formats.
        /// </summary>
        public InputList<string> SupportedModelFormats
        {
            get => _supportedModelFormats ?? (_supportedModelFormats = new InputList<string>());
            set => _supportedModelFormats = value;
        }

        public PredictionEnvironmentArgs()
        {
        }
        public static new PredictionEnvironmentArgs Empty => new PredictionEnvironmentArgs();
    }

    public sealed class PredictionEnvironmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum number of concurrent batch prediction jobs.
        /// </summary>
        [Input("batchJobsMaxConcurrent")]
        public Input<int>? BatchJobsMaxConcurrent { get; set; }

        /// <summary>
        /// The importance of batch jobs.
        /// </summary>
        [Input("batchJobsPriority")]
        public Input<string>? BatchJobsPriority { get; set; }

        /// <summary>
        /// The ID of the credential associated with the data connection. Only applicable for external prediction environments managed by DataRobot.
        /// </summary>
        [Input("credentialId")]
        public Input<string>? CredentialId { get; set; }

        /// <summary>
        /// The ID of the data store connection configuration. Only applicable for external prediction environments managed by DataRobot.
        /// </summary>
        [Input("datastoreId")]
        public Input<string>? DatastoreId { get; set; }

        /// <summary>
        /// The description of the Prediction Environment.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Determines if the prediction environment should be managed by the management agent, datarobot, or self-managed. Self-managed by default.
        /// </summary>
        [Input("managedBy")]
        public Input<string>? ManagedBy { get; set; }

        /// <summary>
        /// The name of the Prediction Environment.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The platform for the Prediction Environment.
        /// </summary>
        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("supportedModelFormats")]
        private InputList<string>? _supportedModelFormats;

        /// <summary>
        /// The list of supported model formats.
        /// </summary>
        public InputList<string> SupportedModelFormats
        {
            get => _supportedModelFormats ?? (_supportedModelFormats = new InputList<string>());
            set => _supportedModelFormats = value;
        }

        public PredictionEnvironmentState()
        {
        }
        public static new PredictionEnvironmentState Empty => new PredictionEnvironmentState();
    }
}
