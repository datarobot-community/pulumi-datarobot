// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Datarobot
{
    /// <summary>
    /// Data set from file
    /// </summary>
    [DatarobotResourceType("datarobot:index/customModel:CustomModel")]
    public partial class CustomModel : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the base environment for the Custom Model.
        /// </summary>
        [Output("baseEnvironmentId")]
        public Output<string> BaseEnvironmentId { get; private set; } = null!;

        /// <summary>
        /// The name of the base environment for the Custom Model.
        /// </summary>
        [Output("baseEnvironmentName")]
        public Output<string?> BaseEnvironmentName { get; private set; } = null!;

        /// <summary>
        /// The ID of the base environment version for the Custom Model.
        /// </summary>
        [Output("baseEnvironmentVersionId")]
        public Output<string> BaseEnvironmentVersionId { get; private set; } = null!;

        /// <summary>
        /// Class labels for multiclass classification. Cannot be used with class*labels*file.
        /// </summary>
        [Output("classLabels")]
        public Output<ImmutableArray<string>> ClassLabels { get; private set; } = null!;

        /// <summary>
        /// Path to file containing newline separated class labels for multiclass classification. Cannot be used with class_labels.
        /// </summary>
        [Output("classLabelsFile")]
        public Output<string?> ClassLabelsFile { get; private set; } = null!;

        /// <summary>
        /// The number of deployments for the Custom Model.
        /// </summary>
        [Output("deploymentsCount")]
        public Output<int> DeploymentsCount { get; private set; } = null!;

        /// <summary>
        /// The description of the Custom Model.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The guard configurations for the Custom Model.
        /// </summary>
        [Output("guardConfigurations")]
        public Output<ImmutableArray<Outputs.CustomModelGuardConfiguration>> GuardConfigurations { get; private set; } = null!;

        /// <summary>
        /// Flag indicating if the Custom Model is a proxy model.
        /// </summary>
        [Output("isProxy")]
        public Output<bool> IsProxy { get; private set; } = null!;

        /// <summary>
        /// The language used to build the Custom Model.
        /// </summary>
        [Output("language")]
        public Output<string?> Language { get; private set; } = null!;

        /// <summary>
        /// The list of local file paths used to build the Custom Model.
        /// </summary>
        [Output("localFiles")]
        public Output<ImmutableArray<string>> LocalFiles { get; private set; } = null!;

        /// <summary>
        /// The name of the Custom Model.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The negative class label of the Custom Model.
        /// </summary>
        [Output("negativeClassLabel")]
        public Output<string> NegativeClassLabel { get; private set; } = null!;

        /// <summary>
        /// The overall moderation configuration for the Custom Model.
        /// </summary>
        [Output("overallModerationConfiguration")]
        public Output<Outputs.CustomModelOverallModerationConfiguration?> OverallModerationConfiguration { get; private set; } = null!;

        /// <summary>
        /// The positive class label of the Custom Model.
        /// </summary>
        [Output("positiveClassLabel")]
        public Output<string> PositiveClassLabel { get; private set; } = null!;

        /// <summary>
        /// The prediction threshold of the Custom Model.
        /// </summary>
        [Output("predictionThreshold")]
        public Output<double> PredictionThreshold { get; private set; } = null!;

        /// <summary>
        /// The resource settings for the Custom Model.
        /// </summary>
        [Output("resourceSettings")]
        public Output<Outputs.CustomModelResourceSettings> ResourceSettings { get; private set; } = null!;

        /// <summary>
        /// The runtime parameter values for the Custom Model.
        /// </summary>
        [Output("runtimeParameterValues")]
        public Output<ImmutableArray<Outputs.CustomModelRuntimeParameterValue>> RuntimeParameterValues { get; private set; } = null!;

        /// <summary>
        /// The ID of the source LLM Blueprint for the Custom Model.
        /// </summary>
        [Output("sourceLlmBlueprintId")]
        public Output<string?> SourceLlmBlueprintId { get; private set; } = null!;

        /// <summary>
        /// The source remote repositories for the Custom Model.
        /// </summary>
        [Output("sourceRemoteRepositories")]
        public Output<ImmutableArray<Outputs.CustomModelSourceRemoteRepository>> SourceRemoteRepositories { get; private set; } = null!;

        /// <summary>
        /// The target name of the Custom Model.
        /// </summary>
        [Output("targetName")]
        public Output<string> TargetName { get; private set; } = null!;

        /// <summary>
        /// The target type of the Custom Model.
        /// </summary>
        [Output("targetType")]
        public Output<string?> TargetType { get; private set; } = null!;

        /// <summary>
        /// The name of the partition column in the training dataset assigned to the Custom Model.
        /// </summary>
        [Output("trainingDataPartitionColumn")]
        public Output<string?> TrainingDataPartitionColumn { get; private set; } = null!;

        /// <summary>
        /// The ID of the training dataset assigned to the Custom Model.
        /// </summary>
        [Output("trainingDatasetId")]
        public Output<string?> TrainingDatasetId { get; private set; } = null!;

        /// <summary>
        /// The name of the training dataset assigned to the Custom Model.
        /// </summary>
        [Output("trainingDatasetName")]
        public Output<string> TrainingDatasetName { get; private set; } = null!;

        /// <summary>
        /// The version ID of the training dataset assigned to the Custom Model.
        /// </summary>
        [Output("trainingDatasetVersionId")]
        public Output<string> TrainingDatasetVersionId { get; private set; } = null!;

        /// <summary>
        /// The ID of the latest Custom Model version.
        /// </summary>
        [Output("versionId")]
        public Output<string> VersionId { get; private set; } = null!;


        /// <summary>
        /// Create a CustomModel resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomModel(string name, CustomModelArgs? args = null, CustomResourceOptions? options = null)
            : base("datarobot:index/customModel:CustomModel", name, args ?? new CustomModelArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomModel(string name, Input<string> id, CustomModelState? state = null, CustomResourceOptions? options = null)
            : base("datarobot:index/customModel:CustomModel", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/datarobot-community/pulumi-datarobot",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomModel resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomModel Get(string name, Input<string> id, CustomModelState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomModel(name, id, state, options);
        }
    }

    public sealed class CustomModelArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the base environment for the Custom Model.
        /// </summary>
        [Input("baseEnvironmentId")]
        public Input<string>? BaseEnvironmentId { get; set; }

        /// <summary>
        /// The name of the base environment for the Custom Model.
        /// </summary>
        [Input("baseEnvironmentName")]
        public Input<string>? BaseEnvironmentName { get; set; }

        /// <summary>
        /// The ID of the base environment version for the Custom Model.
        /// </summary>
        [Input("baseEnvironmentVersionId")]
        public Input<string>? BaseEnvironmentVersionId { get; set; }

        [Input("classLabels")]
        private InputList<string>? _classLabels;

        /// <summary>
        /// Class labels for multiclass classification. Cannot be used with class*labels*file.
        /// </summary>
        public InputList<string> ClassLabels
        {
            get => _classLabels ?? (_classLabels = new InputList<string>());
            set => _classLabels = value;
        }

        /// <summary>
        /// Path to file containing newline separated class labels for multiclass classification. Cannot be used with class_labels.
        /// </summary>
        [Input("classLabelsFile")]
        public Input<string>? ClassLabelsFile { get; set; }

        /// <summary>
        /// The description of the Custom Model.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("guardConfigurations")]
        private InputList<Inputs.CustomModelGuardConfigurationArgs>? _guardConfigurations;

        /// <summary>
        /// The guard configurations for the Custom Model.
        /// </summary>
        public InputList<Inputs.CustomModelGuardConfigurationArgs> GuardConfigurations
        {
            get => _guardConfigurations ?? (_guardConfigurations = new InputList<Inputs.CustomModelGuardConfigurationArgs>());
            set => _guardConfigurations = value;
        }

        /// <summary>
        /// Flag indicating if the Custom Model is a proxy model.
        /// </summary>
        [Input("isProxy")]
        public Input<bool>? IsProxy { get; set; }

        /// <summary>
        /// The language used to build the Custom Model.
        /// </summary>
        [Input("language")]
        public Input<string>? Language { get; set; }

        [Input("localFiles")]
        private InputList<string>? _localFiles;

        /// <summary>
        /// The list of local file paths used to build the Custom Model.
        /// </summary>
        public InputList<string> LocalFiles
        {
            get => _localFiles ?? (_localFiles = new InputList<string>());
            set => _localFiles = value;
        }

        /// <summary>
        /// The name of the Custom Model.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The negative class label of the Custom Model.
        /// </summary>
        [Input("negativeClassLabel")]
        public Input<string>? NegativeClassLabel { get; set; }

        /// <summary>
        /// The overall moderation configuration for the Custom Model.
        /// </summary>
        [Input("overallModerationConfiguration")]
        public Input<Inputs.CustomModelOverallModerationConfigurationArgs>? OverallModerationConfiguration { get; set; }

        /// <summary>
        /// The positive class label of the Custom Model.
        /// </summary>
        [Input("positiveClassLabel")]
        public Input<string>? PositiveClassLabel { get; set; }

        /// <summary>
        /// The prediction threshold of the Custom Model.
        /// </summary>
        [Input("predictionThreshold")]
        public Input<double>? PredictionThreshold { get; set; }

        /// <summary>
        /// The resource settings for the Custom Model.
        /// </summary>
        [Input("resourceSettings")]
        public Input<Inputs.CustomModelResourceSettingsArgs>? ResourceSettings { get; set; }

        [Input("runtimeParameterValues")]
        private InputList<Inputs.CustomModelRuntimeParameterValueArgs>? _runtimeParameterValues;

        /// <summary>
        /// The runtime parameter values for the Custom Model.
        /// </summary>
        public InputList<Inputs.CustomModelRuntimeParameterValueArgs> RuntimeParameterValues
        {
            get => _runtimeParameterValues ?? (_runtimeParameterValues = new InputList<Inputs.CustomModelRuntimeParameterValueArgs>());
            set => _runtimeParameterValues = value;
        }

        /// <summary>
        /// The ID of the source LLM Blueprint for the Custom Model.
        /// </summary>
        [Input("sourceLlmBlueprintId")]
        public Input<string>? SourceLlmBlueprintId { get; set; }

        [Input("sourceRemoteRepositories")]
        private InputList<Inputs.CustomModelSourceRemoteRepositoryArgs>? _sourceRemoteRepositories;

        /// <summary>
        /// The source remote repositories for the Custom Model.
        /// </summary>
        public InputList<Inputs.CustomModelSourceRemoteRepositoryArgs> SourceRemoteRepositories
        {
            get => _sourceRemoteRepositories ?? (_sourceRemoteRepositories = new InputList<Inputs.CustomModelSourceRemoteRepositoryArgs>());
            set => _sourceRemoteRepositories = value;
        }

        /// <summary>
        /// The target name of the Custom Model.
        /// </summary>
        [Input("targetName")]
        public Input<string>? TargetName { get; set; }

        /// <summary>
        /// The target type of the Custom Model.
        /// </summary>
        [Input("targetType")]
        public Input<string>? TargetType { get; set; }

        /// <summary>
        /// The name of the partition column in the training dataset assigned to the Custom Model.
        /// </summary>
        [Input("trainingDataPartitionColumn")]
        public Input<string>? TrainingDataPartitionColumn { get; set; }

        /// <summary>
        /// The ID of the training dataset assigned to the Custom Model.
        /// </summary>
        [Input("trainingDatasetId")]
        public Input<string>? TrainingDatasetId { get; set; }

        public CustomModelArgs()
        {
        }
        public static new CustomModelArgs Empty => new CustomModelArgs();
    }

    public sealed class CustomModelState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the base environment for the Custom Model.
        /// </summary>
        [Input("baseEnvironmentId")]
        public Input<string>? BaseEnvironmentId { get; set; }

        /// <summary>
        /// The name of the base environment for the Custom Model.
        /// </summary>
        [Input("baseEnvironmentName")]
        public Input<string>? BaseEnvironmentName { get; set; }

        /// <summary>
        /// The ID of the base environment version for the Custom Model.
        /// </summary>
        [Input("baseEnvironmentVersionId")]
        public Input<string>? BaseEnvironmentVersionId { get; set; }

        [Input("classLabels")]
        private InputList<string>? _classLabels;

        /// <summary>
        /// Class labels for multiclass classification. Cannot be used with class*labels*file.
        /// </summary>
        public InputList<string> ClassLabels
        {
            get => _classLabels ?? (_classLabels = new InputList<string>());
            set => _classLabels = value;
        }

        /// <summary>
        /// Path to file containing newline separated class labels for multiclass classification. Cannot be used with class_labels.
        /// </summary>
        [Input("classLabelsFile")]
        public Input<string>? ClassLabelsFile { get; set; }

        /// <summary>
        /// The number of deployments for the Custom Model.
        /// </summary>
        [Input("deploymentsCount")]
        public Input<int>? DeploymentsCount { get; set; }

        /// <summary>
        /// The description of the Custom Model.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("guardConfigurations")]
        private InputList<Inputs.CustomModelGuardConfigurationGetArgs>? _guardConfigurations;

        /// <summary>
        /// The guard configurations for the Custom Model.
        /// </summary>
        public InputList<Inputs.CustomModelGuardConfigurationGetArgs> GuardConfigurations
        {
            get => _guardConfigurations ?? (_guardConfigurations = new InputList<Inputs.CustomModelGuardConfigurationGetArgs>());
            set => _guardConfigurations = value;
        }

        /// <summary>
        /// Flag indicating if the Custom Model is a proxy model.
        /// </summary>
        [Input("isProxy")]
        public Input<bool>? IsProxy { get; set; }

        /// <summary>
        /// The language used to build the Custom Model.
        /// </summary>
        [Input("language")]
        public Input<string>? Language { get; set; }

        [Input("localFiles")]
        private InputList<string>? _localFiles;

        /// <summary>
        /// The list of local file paths used to build the Custom Model.
        /// </summary>
        public InputList<string> LocalFiles
        {
            get => _localFiles ?? (_localFiles = new InputList<string>());
            set => _localFiles = value;
        }

        /// <summary>
        /// The name of the Custom Model.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The negative class label of the Custom Model.
        /// </summary>
        [Input("negativeClassLabel")]
        public Input<string>? NegativeClassLabel { get; set; }

        /// <summary>
        /// The overall moderation configuration for the Custom Model.
        /// </summary>
        [Input("overallModerationConfiguration")]
        public Input<Inputs.CustomModelOverallModerationConfigurationGetArgs>? OverallModerationConfiguration { get; set; }

        /// <summary>
        /// The positive class label of the Custom Model.
        /// </summary>
        [Input("positiveClassLabel")]
        public Input<string>? PositiveClassLabel { get; set; }

        /// <summary>
        /// The prediction threshold of the Custom Model.
        /// </summary>
        [Input("predictionThreshold")]
        public Input<double>? PredictionThreshold { get; set; }

        /// <summary>
        /// The resource settings for the Custom Model.
        /// </summary>
        [Input("resourceSettings")]
        public Input<Inputs.CustomModelResourceSettingsGetArgs>? ResourceSettings { get; set; }

        [Input("runtimeParameterValues")]
        private InputList<Inputs.CustomModelRuntimeParameterValueGetArgs>? _runtimeParameterValues;

        /// <summary>
        /// The runtime parameter values for the Custom Model.
        /// </summary>
        public InputList<Inputs.CustomModelRuntimeParameterValueGetArgs> RuntimeParameterValues
        {
            get => _runtimeParameterValues ?? (_runtimeParameterValues = new InputList<Inputs.CustomModelRuntimeParameterValueGetArgs>());
            set => _runtimeParameterValues = value;
        }

        /// <summary>
        /// The ID of the source LLM Blueprint for the Custom Model.
        /// </summary>
        [Input("sourceLlmBlueprintId")]
        public Input<string>? SourceLlmBlueprintId { get; set; }

        [Input("sourceRemoteRepositories")]
        private InputList<Inputs.CustomModelSourceRemoteRepositoryGetArgs>? _sourceRemoteRepositories;

        /// <summary>
        /// The source remote repositories for the Custom Model.
        /// </summary>
        public InputList<Inputs.CustomModelSourceRemoteRepositoryGetArgs> SourceRemoteRepositories
        {
            get => _sourceRemoteRepositories ?? (_sourceRemoteRepositories = new InputList<Inputs.CustomModelSourceRemoteRepositoryGetArgs>());
            set => _sourceRemoteRepositories = value;
        }

        /// <summary>
        /// The target name of the Custom Model.
        /// </summary>
        [Input("targetName")]
        public Input<string>? TargetName { get; set; }

        /// <summary>
        /// The target type of the Custom Model.
        /// </summary>
        [Input("targetType")]
        public Input<string>? TargetType { get; set; }

        /// <summary>
        /// The name of the partition column in the training dataset assigned to the Custom Model.
        /// </summary>
        [Input("trainingDataPartitionColumn")]
        public Input<string>? TrainingDataPartitionColumn { get; set; }

        /// <summary>
        /// The ID of the training dataset assigned to the Custom Model.
        /// </summary>
        [Input("trainingDatasetId")]
        public Input<string>? TrainingDatasetId { get; set; }

        /// <summary>
        /// The name of the training dataset assigned to the Custom Model.
        /// </summary>
        [Input("trainingDatasetName")]
        public Input<string>? TrainingDatasetName { get; set; }

        /// <summary>
        /// The version ID of the training dataset assigned to the Custom Model.
        /// </summary>
        [Input("trainingDatasetVersionId")]
        public Input<string>? TrainingDatasetVersionId { get; set; }

        /// <summary>
        /// The ID of the latest Custom Model version.
        /// </summary>
        [Input("versionId")]
        public Input<string>? VersionId { get; set; }

        public CustomModelState()
        {
        }
        public static new CustomModelState Empty => new CustomModelState();
    }
}
