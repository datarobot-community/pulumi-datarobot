// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DataRobotPulumi.Datarobot.Inputs
{

    public sealed class BatchPredictionJobDefinitionOutputSettingsGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of specified database catalog for JDBC type.
        /// </summary>
        [Input("catalog")]
        public Input<string>? Catalog { get; set; }

        /// <summary>
        /// If no existing table is detected, attempt to create it before writing data for JDBC type.
        /// </summary>
        [Input("createTableIfNotExists")]
        public Input<bool>? CreateTableIfNotExists { get; set; }

        /// <summary>
        /// The ID of the credentials for S3 or JDBC data source.
        /// </summary>
        [Input("credentialId")]
        public Input<string>? CredentialId { get; set; }

        /// <summary>
        /// The ID of the external data store connected to the JDBC data source.
        /// </summary>
        [Input("dataStoreId")]
        public Input<string>? DataStoreId { get; set; }

        /// <summary>
        /// Any non-default endpoint URL for S3 access.
        /// </summary>
        [Input("endpointUrl")]
        public Input<string>? EndpointUrl { get; set; }

        /// <summary>
        /// Path to save the scored data as CSV for localFile type.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The name of specified database schema for JDBC type.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// The type of insertion statement to create for JDBC type.
        /// </summary>
        [Input("statementType")]
        public Input<string>? StatementType { get; set; }

        /// <summary>
        /// The name of specified database table for JDBC type.
        /// </summary>
        [Input("table")]
        public Input<string>? Table { get; set; }

        /// <summary>
        /// Type of output.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("updateColumns")]
        private InputList<string>? _updateColumns;

        /// <summary>
        /// A list of strings containing those column names to be updated for JDBC type.
        /// </summary>
        public InputList<string> UpdateColumns
        {
            get => _updateColumns ?? (_updateColumns = new InputList<string>());
            set => _updateColumns = value;
        }

        /// <summary>
        /// The URL for storing the results (e.g.: s3://bucket/key) for S3 type.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        [Input("whereColumns")]
        private InputList<string>? _whereColumns;

        /// <summary>
        /// A list of strings containing those column names to be selected for JDBC type.
        /// </summary>
        public InputList<string> WhereColumns
        {
            get => _whereColumns ?? (_whereColumns = new InputList<string>());
            set => _whereColumns = value;
        }

        public BatchPredictionJobDefinitionOutputSettingsGetArgs()
        {
        }
        public static new BatchPredictionJobDefinitionOutputSettingsGetArgs Empty => new BatchPredictionJobDefinitionOutputSettingsGetArgs();
    }
}
