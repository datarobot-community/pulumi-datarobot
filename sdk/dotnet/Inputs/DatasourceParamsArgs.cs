// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DataRobotPulumi.Datarobot.Inputs
{

    public sealed class DatasourceParamsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Catalog name in the database if supported.
        /// </summary>
        [Input("catalog")]
        public Input<string>? Catalog { get; set; }

        /// <summary>
        /// The id of the DataStore.
        /// </summary>
        [Input("dataStoreId", required: true)]
        public Input<string> DataStoreId { get; set; } = null!;

        /// <summary>
        /// A user specified fetch size in the range [1, 20000]. By default a fetchSize will be assigned to balance throughput and memory usage.
        /// </summary>
        [Input("fetchSize")]
        public Input<int>? FetchSize { get; set; }

        /// <summary>
        /// The name of the partition column.
        /// </summary>
        [Input("partitionColumn")]
        public Input<string>? PartitionColumn { get; set; }

        /// <summary>
        /// The user-specified path for BLOB storage.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// The user specified SQL query.
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        /// <summary>
        /// The name of the schema associated with the table.
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        /// <summary>
        /// The name of specified database table.
        /// </summary>
        [Input("table")]
        public Input<string>? Table { get; set; }

        public DatasourceParamsArgs()
        {
        }
        public static new DatasourceParamsArgs Empty => new DatasourceParamsArgs();
    }
}
