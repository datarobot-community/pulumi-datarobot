// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DataRobotPulumi.Datarobot
{
    /// <summary>
    /// Custom Application created from an Execution Environment.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datarobot = DataRobotPulumi.Datarobot;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Datarobot.CustomApplicationFromEnvironment("example", new()
    ///     {
    ///         EnvironmentId = "6542cd582a9d3d51bf4ac71e",
    ///         ExternalAccessEnabled = true,
    ///         ExternalAccessRecipients = new[]
    ///         {
    ///             "recipient@example.com",
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["datarobotCustomApplicationId"] = example.Id,
    ///         ["datarobotCustomApplicationUrl"] = example.ApplicationUrl,
    ///     };
    /// });
    /// ```
    /// </summary>
    [DatarobotResourceType("datarobot:index/customApplicationFromEnvironment:CustomApplicationFromEnvironment")]
    public partial class CustomApplicationFromEnvironment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The URL of the Custom Application.
        /// </summary>
        [Output("applicationUrl")]
        public Output<string> ApplicationUrl { get; private set; } = null!;

        /// <summary>
        /// The ID of the Execution Environment used to create the Custom Application.
        /// </summary>
        [Output("environmentId")]
        public Output<string> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// The version ID of the Execution Environment used to create the Custom Application.
        /// </summary>
        [Output("environmentVersionId")]
        public Output<string> EnvironmentVersionId { get; private set; } = null!;

        /// <summary>
        /// Whether external access is enabled for the Custom Application.
        /// </summary>
        [Output("externalAccessEnabled")]
        public Output<bool> ExternalAccessEnabled { get; private set; } = null!;

        /// <summary>
        /// The list of external email addresses that have access to the Custom Application.
        /// </summary>
        [Output("externalAccessRecipients")]
        public Output<ImmutableArray<string>> ExternalAccessRecipients { get; private set; } = null!;

        /// <summary>
        /// The name of the Custom Application.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The list of Use Case IDs to add the Custom Application to.
        /// </summary>
        [Output("useCaseIds")]
        public Output<ImmutableArray<string>> UseCaseIds { get; private set; } = null!;


        /// <summary>
        /// Create a CustomApplicationFromEnvironment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CustomApplicationFromEnvironment(string name, CustomApplicationFromEnvironmentArgs args, CustomResourceOptions? options = null)
            : base("datarobot:index/customApplicationFromEnvironment:CustomApplicationFromEnvironment", name, args ?? new CustomApplicationFromEnvironmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CustomApplicationFromEnvironment(string name, Input<string> id, CustomApplicationFromEnvironmentState? state = null, CustomResourceOptions? options = null)
            : base("datarobot:index/customApplicationFromEnvironment:CustomApplicationFromEnvironment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/datarobot-community/pulumi-datarobot",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CustomApplicationFromEnvironment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CustomApplicationFromEnvironment Get(string name, Input<string> id, CustomApplicationFromEnvironmentState? state = null, CustomResourceOptions? options = null)
        {
            return new CustomApplicationFromEnvironment(name, id, state, options);
        }
    }

    public sealed class CustomApplicationFromEnvironmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the Execution Environment used to create the Custom Application.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        /// <summary>
        /// Whether external access is enabled for the Custom Application.
        /// </summary>
        [Input("externalAccessEnabled")]
        public Input<bool>? ExternalAccessEnabled { get; set; }

        [Input("externalAccessRecipients")]
        private InputList<string>? _externalAccessRecipients;

        /// <summary>
        /// The list of external email addresses that have access to the Custom Application.
        /// </summary>
        public InputList<string> ExternalAccessRecipients
        {
            get => _externalAccessRecipients ?? (_externalAccessRecipients = new InputList<string>());
            set => _externalAccessRecipients = value;
        }

        /// <summary>
        /// The name of the Custom Application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("useCaseIds")]
        private InputList<string>? _useCaseIds;

        /// <summary>
        /// The list of Use Case IDs to add the Custom Application to.
        /// </summary>
        public InputList<string> UseCaseIds
        {
            get => _useCaseIds ?? (_useCaseIds = new InputList<string>());
            set => _useCaseIds = value;
        }

        public CustomApplicationFromEnvironmentArgs()
        {
        }
        public static new CustomApplicationFromEnvironmentArgs Empty => new CustomApplicationFromEnvironmentArgs();
    }

    public sealed class CustomApplicationFromEnvironmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The URL of the Custom Application.
        /// </summary>
        [Input("applicationUrl")]
        public Input<string>? ApplicationUrl { get; set; }

        /// <summary>
        /// The ID of the Execution Environment used to create the Custom Application.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        /// <summary>
        /// The version ID of the Execution Environment used to create the Custom Application.
        /// </summary>
        [Input("environmentVersionId")]
        public Input<string>? EnvironmentVersionId { get; set; }

        /// <summary>
        /// Whether external access is enabled for the Custom Application.
        /// </summary>
        [Input("externalAccessEnabled")]
        public Input<bool>? ExternalAccessEnabled { get; set; }

        [Input("externalAccessRecipients")]
        private InputList<string>? _externalAccessRecipients;

        /// <summary>
        /// The list of external email addresses that have access to the Custom Application.
        /// </summary>
        public InputList<string> ExternalAccessRecipients
        {
            get => _externalAccessRecipients ?? (_externalAccessRecipients = new InputList<string>());
            set => _externalAccessRecipients = value;
        }

        /// <summary>
        /// The name of the Custom Application.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("useCaseIds")]
        private InputList<string>? _useCaseIds;

        /// <summary>
        /// The list of Use Case IDs to add the Custom Application to.
        /// </summary>
        public InputList<string> UseCaseIds
        {
            get => _useCaseIds ?? (_useCaseIds = new InputList<string>());
            set => _useCaseIds = value;
        }

        public CustomApplicationFromEnvironmentState()
        {
        }
        public static new CustomApplicationFromEnvironmentState Empty => new CustomApplicationFromEnvironmentState();
    }
}
