// *** WARNING: this file was generated by pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace DataRobotPulumi.Datarobot
{
    /// <summary>
    /// Data set from file
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Datarobot = DataRobotPulumi.Datarobot;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Datarobot.DatasetFromUrl("example", new()
    ///     {
    ///         Url = "[URL to upload from]",
    ///         UseCaseIds = new[]
    ///         {
    ///             datarobot_use_case.Example.Id,
    ///         },
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["exampleId"] = example.Id,
    ///     };
    /// });
    /// ```
    /// </summary>
    [DatarobotResourceType("datarobot:index/datasetFromUrl:DatasetFromUrl")]
    public partial class DatasetFromUrl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The name of the Dataset.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The URL to upload the Dataset from.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;

        /// <summary>
        /// The list of Use Case IDs to add the Dataset to.
        /// </summary>
        [Output("useCaseIds")]
        public Output<ImmutableArray<string>> UseCaseIds { get; private set; } = null!;


        /// <summary>
        /// Create a DatasetFromUrl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatasetFromUrl(string name, DatasetFromUrlArgs args, CustomResourceOptions? options = null)
            : base("datarobot:index/datasetFromUrl:DatasetFromUrl", name, args ?? new DatasetFromUrlArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatasetFromUrl(string name, Input<string> id, DatasetFromUrlState? state = null, CustomResourceOptions? options = null)
            : base("datarobot:index/datasetFromUrl:DatasetFromUrl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/datarobot-community/pulumi-datarobot",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatasetFromUrl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatasetFromUrl Get(string name, Input<string> id, DatasetFromUrlState? state = null, CustomResourceOptions? options = null)
        {
            return new DatasetFromUrl(name, id, state, options);
        }
    }

    public sealed class DatasetFromUrlArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Dataset.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URL to upload the Dataset from.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        [Input("useCaseIds")]
        private InputList<string>? _useCaseIds;

        /// <summary>
        /// The list of Use Case IDs to add the Dataset to.
        /// </summary>
        public InputList<string> UseCaseIds
        {
            get => _useCaseIds ?? (_useCaseIds = new InputList<string>());
            set => _useCaseIds = value;
        }

        public DatasetFromUrlArgs()
        {
        }
        public static new DatasetFromUrlArgs Empty => new DatasetFromUrlArgs();
    }

    public sealed class DatasetFromUrlState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the Dataset.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The URL to upload the Dataset from.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        [Input("useCaseIds")]
        private InputList<string>? _useCaseIds;

        /// <summary>
        /// The list of Use Case IDs to add the Dataset to.
        /// </summary>
        public InputList<string> UseCaseIds
        {
            get => _useCaseIds ?? (_useCaseIds = new InputList<string>());
            set => _useCaseIds = value;
        }

        public DatasetFromUrlState()
        {
        }
        public static new DatasetFromUrlState Empty => new DatasetFromUrlState();
    }
}
