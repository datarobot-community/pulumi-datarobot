// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datarobot

import (
	"context"
	"reflect"

	"errors"
	"github.com/datarobot-community/pulumi-datarobot/sdk/go/datarobot/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Deployment
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/datarobot-community/pulumi-datarobot/sdk/go/datarobot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleCustomModel, err := datarobot.NewCustomModel(ctx, "exampleCustomModel", &datarobot.CustomModelArgs{
//				Description:       pulumi.String("Description for the example custom model"),
//				TargetType:        pulumi.String("Binary"),
//				TargetName:        pulumi.String("my_label"),
//				BaseEnvironmentId: pulumi.String("65f9b27eab986d30d4c64268"),
//				Files: pulumi.Any{
//					"example.py",
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleRegisteredModel, err := datarobot.NewRegisteredModel(ctx, "exampleRegisteredModel", &datarobot.RegisteredModelArgs{
//				CustomModelVersionId: exampleCustomModel.VersionId,
//				Description:          pulumi.String("Description for the example registered model"),
//			})
//			if err != nil {
//				return err
//			}
//			examplePredictionEnvironment, err := datarobot.NewPredictionEnvironment(ctx, "examplePredictionEnvironment", &datarobot.PredictionEnvironmentArgs{
//				Description: pulumi.String("Description for the example prediction environment"),
//				Platform:    pulumi.String("datarobotServerless"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleDeployment, err := datarobot.NewDeployment(ctx, "exampleDeployment", &datarobot.DeploymentArgs{
//				Label:                    pulumi.String("An example deployment"),
//				PredictionEnvironmentId:  examplePredictionEnvironment.ID(),
//				RegisteredModelVersionId: exampleRegisteredModel.VersionId,
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("datarobotDeploymentId", exampleDeployment.ID())
//			return nil
//		})
//	}
//
// ```
type Deployment struct {
	pulumi.CustomResourceState

	// Association ID settings for this Deployment.
	AssociationIdSettings DeploymentAssociationIdSettingsPtrOutput `pulumi:"associationIdSettings"`
	// Bias and fairness settings for the Deployment.
	BiasAndFairnessSettings DeploymentBiasAndFairnessSettingsPtrOutput `pulumi:"biasAndFairnessSettings"`
	// The challenger models settings for the Deployment.
	ChallengerModelsSettings DeploymentChallengerModelsSettingsPtrOutput `pulumi:"challengerModelsSettings"`
	// The challenger replay settings for the Deployment.
	ChallengerReplaySettings DeploymentChallengerReplaySettingsPtrOutput `pulumi:"challengerReplaySettings"`
	// The drift tracking settings for the Deployment.
	DriftTrackingSettings DeploymentDriftTrackingSettingsPtrOutput `pulumi:"driftTrackingSettings"`
	// The health settings for this Deployment.
	HealthSettings DeploymentHealthSettingsPtrOutput `pulumi:"healthSettings"`
	// The importance of the Deployment.
	Importance pulumi.StringOutput `pulumi:"importance"`
	// The label of the Deployment.
	Label pulumi.StringOutput `pulumi:"label"`
	// The ID of the predication environment for this Deployment.
	PredictionEnvironmentId pulumi.StringOutput `pulumi:"predictionEnvironmentId"`
	// The prediction intervals settings for this Deployment.
	PredictionIntervalsSettings DeploymentPredictionIntervalsSettingsPtrOutput `pulumi:"predictionIntervalsSettings"`
	// The prediction warning settings for the Deployment.
	PredictionWarningSettings DeploymentPredictionWarningSettingsPtrOutput `pulumi:"predictionWarningSettings"`
	// The predictions by forecase date settings for the Deployment.
	PredictionsByForecastDateSettings DeploymentPredictionsByForecastDateSettingsPtrOutput `pulumi:"predictionsByForecastDateSettings"`
	// The predictions data collection settings for the Deployment.
	PredictionsDataCollectionSettings DeploymentPredictionsDataCollectionSettingsPtrOutput `pulumi:"predictionsDataCollectionSettings"`
	// Settings for the predictions.
	PredictionsSettings DeploymentPredictionsSettingsPtrOutput `pulumi:"predictionsSettings"`
	// The ID of the registered model version for this Deployment.
	RegisteredModelVersionId pulumi.StringOutput `pulumi:"registeredModelVersionId"`
	// The segment analysis settings for the Deployment.
	SegmentAnalysisSettings DeploymentSegmentAnalysisSettingsPtrOutput `pulumi:"segmentAnalysisSettings"`
}

// NewDeployment registers a new resource with the given unique name, arguments, and options.
func NewDeployment(ctx *pulumi.Context,
	name string, args *DeploymentArgs, opts ...pulumi.ResourceOption) (*Deployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Label == nil {
		return nil, errors.New("invalid value for required argument 'Label'")
	}
	if args.PredictionEnvironmentId == nil {
		return nil, errors.New("invalid value for required argument 'PredictionEnvironmentId'")
	}
	if args.RegisteredModelVersionId == nil {
		return nil, errors.New("invalid value for required argument 'RegisteredModelVersionId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Deployment
	err := ctx.RegisterResource("datarobot:index/deployment:Deployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployment gets an existing Deployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentState, opts ...pulumi.ResourceOption) (*Deployment, error) {
	var resource Deployment
	err := ctx.ReadResource("datarobot:index/deployment:Deployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Deployment resources.
type deploymentState struct {
	// Association ID settings for this Deployment.
	AssociationIdSettings *DeploymentAssociationIdSettings `pulumi:"associationIdSettings"`
	// Bias and fairness settings for the Deployment.
	BiasAndFairnessSettings *DeploymentBiasAndFairnessSettings `pulumi:"biasAndFairnessSettings"`
	// The challenger models settings for the Deployment.
	ChallengerModelsSettings *DeploymentChallengerModelsSettings `pulumi:"challengerModelsSettings"`
	// The challenger replay settings for the Deployment.
	ChallengerReplaySettings *DeploymentChallengerReplaySettings `pulumi:"challengerReplaySettings"`
	// The drift tracking settings for the Deployment.
	DriftTrackingSettings *DeploymentDriftTrackingSettings `pulumi:"driftTrackingSettings"`
	// The health settings for this Deployment.
	HealthSettings *DeploymentHealthSettings `pulumi:"healthSettings"`
	// The importance of the Deployment.
	Importance *string `pulumi:"importance"`
	// The label of the Deployment.
	Label *string `pulumi:"label"`
	// The ID of the predication environment for this Deployment.
	PredictionEnvironmentId *string `pulumi:"predictionEnvironmentId"`
	// The prediction intervals settings for this Deployment.
	PredictionIntervalsSettings *DeploymentPredictionIntervalsSettings `pulumi:"predictionIntervalsSettings"`
	// The prediction warning settings for the Deployment.
	PredictionWarningSettings *DeploymentPredictionWarningSettings `pulumi:"predictionWarningSettings"`
	// The predictions by forecase date settings for the Deployment.
	PredictionsByForecastDateSettings *DeploymentPredictionsByForecastDateSettings `pulumi:"predictionsByForecastDateSettings"`
	// The predictions data collection settings for the Deployment.
	PredictionsDataCollectionSettings *DeploymentPredictionsDataCollectionSettings `pulumi:"predictionsDataCollectionSettings"`
	// Settings for the predictions.
	PredictionsSettings *DeploymentPredictionsSettings `pulumi:"predictionsSettings"`
	// The ID of the registered model version for this Deployment.
	RegisteredModelVersionId *string `pulumi:"registeredModelVersionId"`
	// The segment analysis settings for the Deployment.
	SegmentAnalysisSettings *DeploymentSegmentAnalysisSettings `pulumi:"segmentAnalysisSettings"`
}

type DeploymentState struct {
	// Association ID settings for this Deployment.
	AssociationIdSettings DeploymentAssociationIdSettingsPtrInput
	// Bias and fairness settings for the Deployment.
	BiasAndFairnessSettings DeploymentBiasAndFairnessSettingsPtrInput
	// The challenger models settings for the Deployment.
	ChallengerModelsSettings DeploymentChallengerModelsSettingsPtrInput
	// The challenger replay settings for the Deployment.
	ChallengerReplaySettings DeploymentChallengerReplaySettingsPtrInput
	// The drift tracking settings for the Deployment.
	DriftTrackingSettings DeploymentDriftTrackingSettingsPtrInput
	// The health settings for this Deployment.
	HealthSettings DeploymentHealthSettingsPtrInput
	// The importance of the Deployment.
	Importance pulumi.StringPtrInput
	// The label of the Deployment.
	Label pulumi.StringPtrInput
	// The ID of the predication environment for this Deployment.
	PredictionEnvironmentId pulumi.StringPtrInput
	// The prediction intervals settings for this Deployment.
	PredictionIntervalsSettings DeploymentPredictionIntervalsSettingsPtrInput
	// The prediction warning settings for the Deployment.
	PredictionWarningSettings DeploymentPredictionWarningSettingsPtrInput
	// The predictions by forecase date settings for the Deployment.
	PredictionsByForecastDateSettings DeploymentPredictionsByForecastDateSettingsPtrInput
	// The predictions data collection settings for the Deployment.
	PredictionsDataCollectionSettings DeploymentPredictionsDataCollectionSettingsPtrInput
	// Settings for the predictions.
	PredictionsSettings DeploymentPredictionsSettingsPtrInput
	// The ID of the registered model version for this Deployment.
	RegisteredModelVersionId pulumi.StringPtrInput
	// The segment analysis settings for the Deployment.
	SegmentAnalysisSettings DeploymentSegmentAnalysisSettingsPtrInput
}

func (DeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentState)(nil)).Elem()
}

type deploymentArgs struct {
	// Association ID settings for this Deployment.
	AssociationIdSettings *DeploymentAssociationIdSettings `pulumi:"associationIdSettings"`
	// Bias and fairness settings for the Deployment.
	BiasAndFairnessSettings *DeploymentBiasAndFairnessSettings `pulumi:"biasAndFairnessSettings"`
	// The challenger models settings for the Deployment.
	ChallengerModelsSettings *DeploymentChallengerModelsSettings `pulumi:"challengerModelsSettings"`
	// The challenger replay settings for the Deployment.
	ChallengerReplaySettings *DeploymentChallengerReplaySettings `pulumi:"challengerReplaySettings"`
	// The drift tracking settings for the Deployment.
	DriftTrackingSettings *DeploymentDriftTrackingSettings `pulumi:"driftTrackingSettings"`
	// The health settings for this Deployment.
	HealthSettings *DeploymentHealthSettings `pulumi:"healthSettings"`
	// The importance of the Deployment.
	Importance *string `pulumi:"importance"`
	// The label of the Deployment.
	Label string `pulumi:"label"`
	// The ID of the predication environment for this Deployment.
	PredictionEnvironmentId string `pulumi:"predictionEnvironmentId"`
	// The prediction intervals settings for this Deployment.
	PredictionIntervalsSettings *DeploymentPredictionIntervalsSettings `pulumi:"predictionIntervalsSettings"`
	// The prediction warning settings for the Deployment.
	PredictionWarningSettings *DeploymentPredictionWarningSettings `pulumi:"predictionWarningSettings"`
	// The predictions by forecase date settings for the Deployment.
	PredictionsByForecastDateSettings *DeploymentPredictionsByForecastDateSettings `pulumi:"predictionsByForecastDateSettings"`
	// The predictions data collection settings for the Deployment.
	PredictionsDataCollectionSettings *DeploymentPredictionsDataCollectionSettings `pulumi:"predictionsDataCollectionSettings"`
	// Settings for the predictions.
	PredictionsSettings *DeploymentPredictionsSettings `pulumi:"predictionsSettings"`
	// The ID of the registered model version for this Deployment.
	RegisteredModelVersionId string `pulumi:"registeredModelVersionId"`
	// The segment analysis settings for the Deployment.
	SegmentAnalysisSettings *DeploymentSegmentAnalysisSettings `pulumi:"segmentAnalysisSettings"`
}

// The set of arguments for constructing a Deployment resource.
type DeploymentArgs struct {
	// Association ID settings for this Deployment.
	AssociationIdSettings DeploymentAssociationIdSettingsPtrInput
	// Bias and fairness settings for the Deployment.
	BiasAndFairnessSettings DeploymentBiasAndFairnessSettingsPtrInput
	// The challenger models settings for the Deployment.
	ChallengerModelsSettings DeploymentChallengerModelsSettingsPtrInput
	// The challenger replay settings for the Deployment.
	ChallengerReplaySettings DeploymentChallengerReplaySettingsPtrInput
	// The drift tracking settings for the Deployment.
	DriftTrackingSettings DeploymentDriftTrackingSettingsPtrInput
	// The health settings for this Deployment.
	HealthSettings DeploymentHealthSettingsPtrInput
	// The importance of the Deployment.
	Importance pulumi.StringPtrInput
	// The label of the Deployment.
	Label pulumi.StringInput
	// The ID of the predication environment for this Deployment.
	PredictionEnvironmentId pulumi.StringInput
	// The prediction intervals settings for this Deployment.
	PredictionIntervalsSettings DeploymentPredictionIntervalsSettingsPtrInput
	// The prediction warning settings for the Deployment.
	PredictionWarningSettings DeploymentPredictionWarningSettingsPtrInput
	// The predictions by forecase date settings for the Deployment.
	PredictionsByForecastDateSettings DeploymentPredictionsByForecastDateSettingsPtrInput
	// The predictions data collection settings for the Deployment.
	PredictionsDataCollectionSettings DeploymentPredictionsDataCollectionSettingsPtrInput
	// Settings for the predictions.
	PredictionsSettings DeploymentPredictionsSettingsPtrInput
	// The ID of the registered model version for this Deployment.
	RegisteredModelVersionId pulumi.StringInput
	// The segment analysis settings for the Deployment.
	SegmentAnalysisSettings DeploymentSegmentAnalysisSettingsPtrInput
}

func (DeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentArgs)(nil)).Elem()
}

type DeploymentInput interface {
	pulumi.Input

	ToDeploymentOutput() DeploymentOutput
	ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput
}

func (*Deployment) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (i *Deployment) ToDeploymentOutput() DeploymentOutput {
	return i.ToDeploymentOutputWithContext(context.Background())
}

func (i *Deployment) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput)
}

// DeploymentArrayInput is an input type that accepts DeploymentArray and DeploymentArrayOutput values.
// You can construct a concrete instance of `DeploymentArrayInput` via:
//
//	DeploymentArray{ DeploymentArgs{...} }
type DeploymentArrayInput interface {
	pulumi.Input

	ToDeploymentArrayOutput() DeploymentArrayOutput
	ToDeploymentArrayOutputWithContext(context.Context) DeploymentArrayOutput
}

type DeploymentArray []DeploymentInput

func (DeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Deployment)(nil)).Elem()
}

func (i DeploymentArray) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return i.ToDeploymentArrayOutputWithContext(context.Background())
}

func (i DeploymentArray) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentArrayOutput)
}

// DeploymentMapInput is an input type that accepts DeploymentMap and DeploymentMapOutput values.
// You can construct a concrete instance of `DeploymentMapInput` via:
//
//	DeploymentMap{ "key": DeploymentArgs{...} }
type DeploymentMapInput interface {
	pulumi.Input

	ToDeploymentMapOutput() DeploymentMapOutput
	ToDeploymentMapOutputWithContext(context.Context) DeploymentMapOutput
}

type DeploymentMap map[string]DeploymentInput

func (DeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Deployment)(nil)).Elem()
}

func (i DeploymentMap) ToDeploymentMapOutput() DeploymentMapOutput {
	return i.ToDeploymentMapOutputWithContext(context.Background())
}

func (i DeploymentMap) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentMapOutput)
}

type DeploymentOutput struct{ *pulumi.OutputState }

func (DeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (o DeploymentOutput) ToDeploymentOutput() DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return o
}

// Association ID settings for this Deployment.
func (o DeploymentOutput) AssociationIdSettings() DeploymentAssociationIdSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentAssociationIdSettingsPtrOutput { return v.AssociationIdSettings }).(DeploymentAssociationIdSettingsPtrOutput)
}

// Bias and fairness settings for the Deployment.
func (o DeploymentOutput) BiasAndFairnessSettings() DeploymentBiasAndFairnessSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentBiasAndFairnessSettingsPtrOutput { return v.BiasAndFairnessSettings }).(DeploymentBiasAndFairnessSettingsPtrOutput)
}

// The challenger models settings for the Deployment.
func (o DeploymentOutput) ChallengerModelsSettings() DeploymentChallengerModelsSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentChallengerModelsSettingsPtrOutput { return v.ChallengerModelsSettings }).(DeploymentChallengerModelsSettingsPtrOutput)
}

// The challenger replay settings for the Deployment.
func (o DeploymentOutput) ChallengerReplaySettings() DeploymentChallengerReplaySettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentChallengerReplaySettingsPtrOutput { return v.ChallengerReplaySettings }).(DeploymentChallengerReplaySettingsPtrOutput)
}

// The drift tracking settings for the Deployment.
func (o DeploymentOutput) DriftTrackingSettings() DeploymentDriftTrackingSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentDriftTrackingSettingsPtrOutput { return v.DriftTrackingSettings }).(DeploymentDriftTrackingSettingsPtrOutput)
}

// The health settings for this Deployment.
func (o DeploymentOutput) HealthSettings() DeploymentHealthSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentHealthSettingsPtrOutput { return v.HealthSettings }).(DeploymentHealthSettingsPtrOutput)
}

// The importance of the Deployment.
func (o DeploymentOutput) Importance() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.Importance }).(pulumi.StringOutput)
}

// The label of the Deployment.
func (o DeploymentOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.Label }).(pulumi.StringOutput)
}

// The ID of the predication environment for this Deployment.
func (o DeploymentOutput) PredictionEnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.PredictionEnvironmentId }).(pulumi.StringOutput)
}

// The prediction intervals settings for this Deployment.
func (o DeploymentOutput) PredictionIntervalsSettings() DeploymentPredictionIntervalsSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentPredictionIntervalsSettingsPtrOutput {
		return v.PredictionIntervalsSettings
	}).(DeploymentPredictionIntervalsSettingsPtrOutput)
}

// The prediction warning settings for the Deployment.
func (o DeploymentOutput) PredictionWarningSettings() DeploymentPredictionWarningSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentPredictionWarningSettingsPtrOutput { return v.PredictionWarningSettings }).(DeploymentPredictionWarningSettingsPtrOutput)
}

// The predictions by forecase date settings for the Deployment.
func (o DeploymentOutput) PredictionsByForecastDateSettings() DeploymentPredictionsByForecastDateSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentPredictionsByForecastDateSettingsPtrOutput {
		return v.PredictionsByForecastDateSettings
	}).(DeploymentPredictionsByForecastDateSettingsPtrOutput)
}

// The predictions data collection settings for the Deployment.
func (o DeploymentOutput) PredictionsDataCollectionSettings() DeploymentPredictionsDataCollectionSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentPredictionsDataCollectionSettingsPtrOutput {
		return v.PredictionsDataCollectionSettings
	}).(DeploymentPredictionsDataCollectionSettingsPtrOutput)
}

// Settings for the predictions.
func (o DeploymentOutput) PredictionsSettings() DeploymentPredictionsSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentPredictionsSettingsPtrOutput { return v.PredictionsSettings }).(DeploymentPredictionsSettingsPtrOutput)
}

// The ID of the registered model version for this Deployment.
func (o DeploymentOutput) RegisteredModelVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.RegisteredModelVersionId }).(pulumi.StringOutput)
}

// The segment analysis settings for the Deployment.
func (o DeploymentOutput) SegmentAnalysisSettings() DeploymentSegmentAnalysisSettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentSegmentAnalysisSettingsPtrOutput { return v.SegmentAnalysisSettings }).(DeploymentSegmentAnalysisSettingsPtrOutput)
}

type DeploymentArrayOutput struct{ *pulumi.OutputState }

func (DeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Deployment)(nil)).Elem()
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) Index(i pulumi.IntInput) DeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Deployment {
		return vs[0].([]*Deployment)[vs[1].(int)]
	}).(DeploymentOutput)
}

type DeploymentMapOutput struct{ *pulumi.OutputState }

func (DeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Deployment)(nil)).Elem()
}

func (o DeploymentMapOutput) ToDeploymentMapOutput() DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) MapIndex(k pulumi.StringInput) DeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Deployment {
		return vs[0].(map[string]*Deployment)[vs[1].(string)]
	}).(DeploymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentInput)(nil)).Elem(), &Deployment{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentArrayInput)(nil)).Elem(), DeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentMapInput)(nil)).Elem(), DeploymentMap{})
	pulumi.RegisterOutputType(DeploymentOutput{})
	pulumi.RegisterOutputType(DeploymentArrayOutput{})
	pulumi.RegisterOutputType(DeploymentMapOutput{})
}
