// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datarobot

import (
	"context"
	"reflect"

	"github.com/datarobot-community/pulumi-datarobot/sdk/go/datarobot/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Execution Environment
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/datarobot-community/pulumi-datarobot/sdk/go/datarobot"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datarobot.LookupExecutionEnvironment(ctx, &datarobot.LookupExecutionEnvironmentArgs{
//				Name: "DataRobot] Python 3.12",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupExecutionEnvironment(ctx *pulumi.Context, args *LookupExecutionEnvironmentArgs, opts ...pulumi.InvokeOption) (*LookupExecutionEnvironmentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupExecutionEnvironmentResult
	err := ctx.Invoke("datarobot:index/getExecutionEnvironment:getExecutionEnvironment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExecutionEnvironment.
type LookupExecutionEnvironmentArgs struct {
	// The name of the Execution Environment.
	Name string `pulumi:"name"`
}

// A collection of values returned by getExecutionEnvironment.
type LookupExecutionEnvironmentResult struct {
	// The description of the Execution Environment.
	Description string `pulumi:"description"`
	// The ID of the Execution Environment.
	Id string `pulumi:"id"`
	// The name of the Execution Environment.
	Name string `pulumi:"name"`
	// The programming language of the Execution Environment.
	ProgrammingLanguage string `pulumi:"programmingLanguage"`
	// The ID of the Execution Environment Version.
	VersionId string `pulumi:"versionId"`
}

func LookupExecutionEnvironmentOutput(ctx *pulumi.Context, args LookupExecutionEnvironmentOutputArgs, opts ...pulumi.InvokeOption) LookupExecutionEnvironmentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupExecutionEnvironmentResultOutput, error) {
			args := v.(LookupExecutionEnvironmentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("datarobot:index/getExecutionEnvironment:getExecutionEnvironment", args, LookupExecutionEnvironmentResultOutput{}, options).(LookupExecutionEnvironmentResultOutput), nil
		}).(LookupExecutionEnvironmentResultOutput)
}

// A collection of arguments for invoking getExecutionEnvironment.
type LookupExecutionEnvironmentOutputArgs struct {
	// The name of the Execution Environment.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupExecutionEnvironmentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExecutionEnvironmentArgs)(nil)).Elem()
}

// A collection of values returned by getExecutionEnvironment.
type LookupExecutionEnvironmentResultOutput struct{ *pulumi.OutputState }

func (LookupExecutionEnvironmentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExecutionEnvironmentResult)(nil)).Elem()
}

func (o LookupExecutionEnvironmentResultOutput) ToLookupExecutionEnvironmentResultOutput() LookupExecutionEnvironmentResultOutput {
	return o
}

func (o LookupExecutionEnvironmentResultOutput) ToLookupExecutionEnvironmentResultOutputWithContext(ctx context.Context) LookupExecutionEnvironmentResultOutput {
	return o
}

// The description of the Execution Environment.
func (o LookupExecutionEnvironmentResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExecutionEnvironmentResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Execution Environment.
func (o LookupExecutionEnvironmentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExecutionEnvironmentResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Execution Environment.
func (o LookupExecutionEnvironmentResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExecutionEnvironmentResult) string { return v.Name }).(pulumi.StringOutput)
}

// The programming language of the Execution Environment.
func (o LookupExecutionEnvironmentResultOutput) ProgrammingLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExecutionEnvironmentResult) string { return v.ProgrammingLanguage }).(pulumi.StringOutput)
}

// The ID of the Execution Environment Version.
func (o LookupExecutionEnvironmentResultOutput) VersionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExecutionEnvironmentResult) string { return v.VersionId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExecutionEnvironmentResultOutput{})
}
