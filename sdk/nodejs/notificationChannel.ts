// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Notification Channel
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datarobot from "@datarobot/pulumi-datarobot";
 *
 * const example = new datarobot.NotificationChannel("example", {
 *     channelType: "DataRobotUser",
 *     relatedEntityId: datarobot_deployment.example.id,
 *     relatedEntityType: "deployment",
 *     contentType: "application/json",
 *     customHeaders: [{
 *         name: "header1",
 *         value: "value1",
 *     }],
 *     drEntities: [{
 *         id: "11111111111111",
 *         name: "example user",
 *     }],
 *     languageCode: "en",
 *     emailAddress: "example@datarobot.com",
 *     payloadUrl: "https://example.com",
 *     secretToken: "example_secret_token",
 *     validateSsl: true,
 *     verificationCode: "11111",
 * });
 * export const datarobotNotificationPolicyId = datarobot_notification_policy.example.id;
 * ```
 */
export class NotificationChannel extends pulumi.CustomResource {
    /**
     * Get an existing NotificationChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NotificationChannelState, opts?: pulumi.CustomResourceOptions): NotificationChannel {
        return new NotificationChannel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datarobot:index/notificationChannel:NotificationChannel';

    /**
     * Returns true if the given object is an instance of NotificationChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NotificationChannel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NotificationChannel.__pulumiType;
    }

    /**
     * The Type of Notification Channel.
     */
    public readonly channelType!: pulumi.Output<string>;
    /**
     * The content type of the messages of the Notification Channel.
     */
    public readonly contentType!: pulumi.Output<string | undefined>;
    /**
     * Custom headers and their values to be sent in the Notification Channel.
     */
    public readonly customHeaders!: pulumi.Output<outputs.NotificationChannelCustomHeader[] | undefined>;
    /**
     * The IDs of the DataRobot Users, Group or Custom Job associated with the DataRobotUser, DataRobotGroup or DataRobotCustomJob channel types.
     */
    public readonly drEntities!: pulumi.Output<outputs.NotificationChannelDrEntity[] | undefined>;
    /**
     * The email address to be used in the Notification Channel.
     */
    public readonly emailAddress!: pulumi.Output<string | undefined>;
    /**
     * The preferred language code.
     */
    public readonly languageCode!: pulumi.Output<string>;
    /**
     * The name of the Notification Channel.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The payload URL of the Notification Channel.
     */
    public readonly payloadUrl!: pulumi.Output<string | undefined>;
    /**
     * The ID of related entity.
     */
    public readonly relatedEntityId!: pulumi.Output<string>;
    /**
     * The type of related entity.
     */
    public readonly relatedEntityType!: pulumi.Output<string>;
    /**
     * The secret token to be used for the Notification Channel.
     */
    public readonly secretToken!: pulumi.Output<string | undefined>;
    /**
     * Defines if validate ssl or not in the Notification Channel.
     */
    public readonly validateSsl!: pulumi.Output<boolean | undefined>;
    /**
     * Required if the channel type is email.
     */
    public readonly verificationCode!: pulumi.Output<string | undefined>;

    /**
     * Create a NotificationChannel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NotificationChannelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NotificationChannelArgs | NotificationChannelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NotificationChannelState | undefined;
            resourceInputs["channelType"] = state ? state.channelType : undefined;
            resourceInputs["contentType"] = state ? state.contentType : undefined;
            resourceInputs["customHeaders"] = state ? state.customHeaders : undefined;
            resourceInputs["drEntities"] = state ? state.drEntities : undefined;
            resourceInputs["emailAddress"] = state ? state.emailAddress : undefined;
            resourceInputs["languageCode"] = state ? state.languageCode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["payloadUrl"] = state ? state.payloadUrl : undefined;
            resourceInputs["relatedEntityId"] = state ? state.relatedEntityId : undefined;
            resourceInputs["relatedEntityType"] = state ? state.relatedEntityType : undefined;
            resourceInputs["secretToken"] = state ? state.secretToken : undefined;
            resourceInputs["validateSsl"] = state ? state.validateSsl : undefined;
            resourceInputs["verificationCode"] = state ? state.verificationCode : undefined;
        } else {
            const args = argsOrState as NotificationChannelArgs | undefined;
            if ((!args || args.channelType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'channelType'");
            }
            if ((!args || args.relatedEntityId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'relatedEntityId'");
            }
            if ((!args || args.relatedEntityType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'relatedEntityType'");
            }
            resourceInputs["channelType"] = args ? args.channelType : undefined;
            resourceInputs["contentType"] = args ? args.contentType : undefined;
            resourceInputs["customHeaders"] = args ? args.customHeaders : undefined;
            resourceInputs["drEntities"] = args ? args.drEntities : undefined;
            resourceInputs["emailAddress"] = args ? args.emailAddress : undefined;
            resourceInputs["languageCode"] = args ? args.languageCode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["payloadUrl"] = args ? args.payloadUrl : undefined;
            resourceInputs["relatedEntityId"] = args ? args.relatedEntityId : undefined;
            resourceInputs["relatedEntityType"] = args ? args.relatedEntityType : undefined;
            resourceInputs["secretToken"] = args ? args.secretToken : undefined;
            resourceInputs["validateSsl"] = args ? args.validateSsl : undefined;
            resourceInputs["verificationCode"] = args ? args.verificationCode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NotificationChannel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NotificationChannel resources.
 */
export interface NotificationChannelState {
    /**
     * The Type of Notification Channel.
     */
    channelType?: pulumi.Input<string>;
    /**
     * The content type of the messages of the Notification Channel.
     */
    contentType?: pulumi.Input<string>;
    /**
     * Custom headers and their values to be sent in the Notification Channel.
     */
    customHeaders?: pulumi.Input<pulumi.Input<inputs.NotificationChannelCustomHeader>[]>;
    /**
     * The IDs of the DataRobot Users, Group or Custom Job associated with the DataRobotUser, DataRobotGroup or DataRobotCustomJob channel types.
     */
    drEntities?: pulumi.Input<pulumi.Input<inputs.NotificationChannelDrEntity>[]>;
    /**
     * The email address to be used in the Notification Channel.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * The preferred language code.
     */
    languageCode?: pulumi.Input<string>;
    /**
     * The name of the Notification Channel.
     */
    name?: pulumi.Input<string>;
    /**
     * The payload URL of the Notification Channel.
     */
    payloadUrl?: pulumi.Input<string>;
    /**
     * The ID of related entity.
     */
    relatedEntityId?: pulumi.Input<string>;
    /**
     * The type of related entity.
     */
    relatedEntityType?: pulumi.Input<string>;
    /**
     * The secret token to be used for the Notification Channel.
     */
    secretToken?: pulumi.Input<string>;
    /**
     * Defines if validate ssl or not in the Notification Channel.
     */
    validateSsl?: pulumi.Input<boolean>;
    /**
     * Required if the channel type is email.
     */
    verificationCode?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NotificationChannel resource.
 */
export interface NotificationChannelArgs {
    /**
     * The Type of Notification Channel.
     */
    channelType: pulumi.Input<string>;
    /**
     * The content type of the messages of the Notification Channel.
     */
    contentType?: pulumi.Input<string>;
    /**
     * Custom headers and their values to be sent in the Notification Channel.
     */
    customHeaders?: pulumi.Input<pulumi.Input<inputs.NotificationChannelCustomHeader>[]>;
    /**
     * The IDs of the DataRobot Users, Group or Custom Job associated with the DataRobotUser, DataRobotGroup or DataRobotCustomJob channel types.
     */
    drEntities?: pulumi.Input<pulumi.Input<inputs.NotificationChannelDrEntity>[]>;
    /**
     * The email address to be used in the Notification Channel.
     */
    emailAddress?: pulumi.Input<string>;
    /**
     * The preferred language code.
     */
    languageCode?: pulumi.Input<string>;
    /**
     * The name of the Notification Channel.
     */
    name?: pulumi.Input<string>;
    /**
     * The payload URL of the Notification Channel.
     */
    payloadUrl?: pulumi.Input<string>;
    /**
     * The ID of related entity.
     */
    relatedEntityId: pulumi.Input<string>;
    /**
     * The type of related entity.
     */
    relatedEntityType: pulumi.Input<string>;
    /**
     * The secret token to be used for the Notification Channel.
     */
    secretToken?: pulumi.Input<string>;
    /**
     * Defines if validate ssl or not in the Notification Channel.
     */
    validateSsl?: pulumi.Input<boolean>;
    /**
     * Required if the channel type is email.
     */
    verificationCode?: pulumi.Input<string>;
}
