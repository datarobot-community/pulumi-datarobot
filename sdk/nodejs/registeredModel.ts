// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * registered model
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as datarobot from "@datarobot/pulumi-datarobot";
 *
 * const exampleCustomModel = new datarobot.CustomModel("exampleCustomModel", {
 *     description: "Description for the example custom model",
 *     targetType: "Binary",
 *     targetName: "my_label",
 *     baseEnvironmentId: "65f9b27eab986d30d4c64268",
 *     files: ["example.py"],
 * });
 * const exampleRegisteredModel = new datarobot.RegisteredModel("exampleRegisteredModel", {
 *     customModelVersionId: exampleCustomModel.versionId,
 *     description: "Description for the example registered model",
 * });
 * const examplePredictionEnvironment = new datarobot.PredictionEnvironment("examplePredictionEnvironment", {
 *     description: "Description for the example prediction environment",
 *     platform: "datarobotServerless",
 * });
 * export const datarobotRegisteredModelId = exampleRegisteredModel.id;
 * export const datarobotRegisteredModelVersionId = exampleRegisteredModel.versionId;
 * ```
 */
export class RegisteredModel extends pulumi.CustomResource {
    /**
     * Get an existing RegisteredModel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RegisteredModelState, opts?: pulumi.CustomResourceOptions): RegisteredModel {
        return new RegisteredModel(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'datarobot:index/registeredModel:RegisteredModel';

    /**
     * Returns true if the given object is an instance of RegisteredModel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RegisteredModel {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RegisteredModel.__pulumiType;
    }

    /**
     * The ID of the custom model version for this Registered Model.
     */
    public readonly customModelVersionId!: pulumi.Output<string>;
    /**
     * The description of the Registered Model.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of the Registered Model.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the Registered Model Version.
     */
    public /*out*/ readonly versionId!: pulumi.Output<string>;
    /**
     * The name of the Registered Model Version.
     */
    public readonly versionName!: pulumi.Output<string>;

    /**
     * Create a RegisteredModel resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RegisteredModelArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RegisteredModelArgs | RegisteredModelState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RegisteredModelState | undefined;
            resourceInputs["customModelVersionId"] = state ? state.customModelVersionId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["versionId"] = state ? state.versionId : undefined;
            resourceInputs["versionName"] = state ? state.versionName : undefined;
        } else {
            const args = argsOrState as RegisteredModelArgs | undefined;
            if ((!args || args.customModelVersionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customModelVersionId'");
            }
            resourceInputs["customModelVersionId"] = args ? args.customModelVersionId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["versionName"] = args ? args.versionName : undefined;
            resourceInputs["versionId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RegisteredModel.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RegisteredModel resources.
 */
export interface RegisteredModelState {
    /**
     * The ID of the custom model version for this Registered Model.
     */
    customModelVersionId?: pulumi.Input<string>;
    /**
     * The description of the Registered Model.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Registered Model.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Registered Model Version.
     */
    versionId?: pulumi.Input<string>;
    /**
     * The name of the Registered Model Version.
     */
    versionName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RegisteredModel resource.
 */
export interface RegisteredModelArgs {
    /**
     * The ID of the custom model version for this Registered Model.
     */
    customModelVersionId: pulumi.Input<string>;
    /**
     * The description of the Registered Model.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of the Registered Model.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the Registered Model Version.
     */
    versionName?: pulumi.Input<string>;
}
